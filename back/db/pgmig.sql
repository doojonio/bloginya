-- 2 up
-- 2 down
-- 1 up
create extension if not exists "uuid-ossp";

create extension if not exists "pg_trgm";

create domain cool_id as varchar(12);

create
or replace function random_string () returns cool_id as $$
    select substr(md5(random()::text), 0, 13);
$$ language sql;

create type user_role as enum('owner', 'creator', 'visitor');

create table
    users (
        id uuid primary key default uuid_generate_v4 (),
        email text unique not null,
        username text unique not null,
        role user_role not null default 'visitor',
        google_id text unique,
        google_token jsonb,
        google_userinfo jsonb,
        created_at timestamp not null default now()
    );

create table
    sessions (
        id uuid primary key default uuid_generate_v4 (),
        user_id uuid not null references users (id),
        ip inet not null,
        app text,
        created_at timestamp not null default now(),
        used_at timestamp not null default now()
    );

create table
    categories (
        id cool_id primary key default random_string (),
        user_id uuid not null references users (id),
        parent_id cool_id references categories (id),
        title text not null unique,
        priority integer,
        description text,
        created_at timestamp not null default now()
    );

create table
    uploads (
        id text primary key,
        user_id uuid not null references users (id),
        original_type text not null,
        original text not null,
        thumbnail text,
        medium text,
        large text,
        created_at timestamp not null default now()
    );

create type post_status as enum('draft', 'pub', 'del');

create table
    posts (
        id cool_id primary key default random_string (),
        user_id uuid not null references users (id),
        category_id cool_id references categories (id),
        title text not null,
        document jsonb not null,
        meta jsonb not null,
        status post_status not null default 'draft',
        description text,
        priority integer,
        picture_wp text references uploads (id),
        picture_pre text references uploads (id),
        enable_likes boolean not null default true,
        enable_comments boolean not null default true,
        created_at timestamp not null default now(),
        modified_at timestamp,
        published_at timestamp,
        deleted_at timestamp
    );

create table
    languages (
        code text primary key,
        fts_cfg regconfig not null default 'simple'
    );

insert into
    languages
values
    ('ru', 'russian'),
    ('en', 'english'),
    ('ko', 'simple'),
    ('zh', 'simple'),
    ('ja', 'simple');

create table
    post_fts (
        post_id cool_id primary key references posts (id),
        lcode text not null references languages (code),
        fts tsvector not null,
        plain_content text not null,
        unique (post_id, lcode)
    );

create index post_fts_idx on post_fts using GIN (fts);

create index post_fts_sim_idx on post_fts using GIN (plain_content gin_trgm_ops);

-- TODO not sure i'm doing it right here
create table
    post_drafts (
        post_id cool_id primary key references posts (id),
        title text not null,
        document jsonb not null,
        picture_wp text references uploads (id),
        picture_pre text references uploads (id)
    );

create table
    post_uploads (
        upload_id text not null references uploads (id),
        post_id cool_id not null references posts (id),
        primary key (upload_id, post_id)
    );

create index post_uploads_post_id_idx on post_uploads (post_id);

create table
    tags (
        id int generated by default as identity primary key,
        name text unique not null,
        check (length(name) > 1)
    );

create table
    post_tags (
        post_id cool_id not null references posts (id),
        tag_id int not null references tags (id),
        primary key (post_id, tag_id)
    );

create index post_tags_post_id_idx on post_tags (post_id);

create index post_tags_tag_id_idx on post_tags (tag_id);

create table
    category_tags (
        category_id cool_id not null references categories (id),
        tag_id int not null references tags (id),
        primary key (category_id, tag_id)
    );

create index category_tags_category_id_idx on category_tags (category_id);

create index category_tags_tag_id_idx on category_tags (tag_id);

create table
    shortnames (
        name text primary key,
        post_id cool_id references posts (id),
        category_id cool_id references categories (id),
        check (
            post_id is not null
            or category_id is not null
        ),
        check (
            post_id is null
            or category_id is null
        )
    );

create unique index shortnames_post_id_idx on shortnames (post_id);

create index shortnames_category_id_idx on shortnames (category_id);

create table
    comments (
        id cool_id primary key default random_string (),
        user_id uuid not null references users (id),
        post_id cool_id not null references posts (id),
        reply_to_id cool_id references comments (id),
        content text not null,
        created_at timestamp not null default now(),
        edited_at timestamp
    );

create index comments_post_id_idx on comments (post_id);

create index comments_reply_to_id_idx on comments (reply_to_id);

create table
    comment_likes (
        comment_id cool_id not null references comments (id),
        user_id uuid not null references users (id),
        primary key (comment_id, user_id)
    );

create index comment_likes_post_id_idx on comment_likes (comment_id);

create table
    post_likes (
        post_id cool_id not null references posts (id),
        user_id uuid not null references users (id),
        primary key (post_id, user_id)
    );

create index post_likes_post_id_idx on post_likes (post_id);

create table
    post_stats (
        post_id cool_id primary key references posts (id),
        short_views integer not null default 0,
        medium_views integer not null default 0,
        long_views integer not null default 0
    );

-- 1 down
drop table post_stats;

drop table post_likes;

drop table comment_likes;

drop table comments;

drop table shortnames;

drop table category_tags;

drop table post_tags;

drop table tags;

drop table post_uploads;

drop table post_drafts;

drop table post_fts;

drop table languages;

drop table posts;

drop table uploads;

drop type post_status;

drop table categories;

drop table sessions;

drop table users;

drop type user_role;

drop function random_string ();

drop domain cool_id;

-- -- 2 up
-- select 1 from users;
-- -- 2 down
-- select 2 from users;